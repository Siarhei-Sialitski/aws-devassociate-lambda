version: 0.2

phases:
  install:
    runtime-versions:
      dotnet: 8.0  # Specify .NET 8 runtime
    commands:
      - echo "Installing dependencies..."
      - dotnet --version  # Verify the .NET SDK version
      - echo "Installing AWS SAM CLI..."
      - pip install --upgrade aws-sam-cli  # Ensures SAM CLI is installed
  pre_build:
    commands:
      - echo "Restoring dependencies..."
      - dotnet restore --runtime linux-x64 /p:PublishReadyToRun=true  # Restores NuGet dependencies for the project/solution
  build:
    commands:
      - echo "Building the .NET 8 project..."
      - dotnet build --configuration Release  # Builds the project in Release configuration
  post_build:
    commands:
      - echo "Build completed successfully."
      - echo "Running tests (if applicable)..."
      - dotnet test --configuration Release --no-build  # Run tests (if applicable)
      - echo "Tests completed successfully."
      - echo "Publishing the project..."
      - dotnet publish ./SqsLamda/src/SqsLamda/SqsLamda.csproj --configuration Release --output ./publish --runtime linux-x64 --self-contained false /p:PublishReadyToRun=true  # Publish the project to the bin directory
      - echo "Packaging the build artifacts..."
      - sam package --template template.yaml --output-template-file package.yaml --s3-bucket s3-awsdevassociate-codepipeline-ss --force-upload
